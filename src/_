#:lib/shebang.sh

#:lib/_.sh

#:lib/flag.sh

#:lib/color.sh

#:lib/ui.sh

#:lib/must.sh

#:lib/self.sh

#:lib/string.sh

#:lib/array.sh

#:lib/path.sh

#:lib/defer.sh

#:lib/temp.sh

#:lib/os.sh

#:lib/url.sh

#:lib/http.sh

#:lib/file.sh

#:lib/bin.sh

#:lib/git.sh

#:lib/src.sh

#:lib/deb.sh

#:lib/text.sh

#:lib/filetype.sh

#:lib/zip.sh

if [[ ${UNDERSCORE_SOURCE:-} = true ]] || [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
	#/help/

	declare -Ag _command=(
		['bin install']='bin.install'
		['bin use']='bin.use'
		['bug']='ui.bug'
		['cry']='ui.cry'
		['deb install']='deb.install'
		['deb missings']='deb.missings'
		['deb repository']='deb.repository'
		['deb uninstall']='deb.uninstall'
		['deb update']='deb.update'
		['deb using']='deb.using'
		['die']='ui.die'
		['enter']='src.enter'
		['file install']='file.install'
		['filetype is']='filetype.is'
		['filetype mime']='filetype.mime'
		['hey']='ui.hey'
		['http get']='http.get'
		['http is']='http.is'
		['os codename']='os.codename'
		['os dist']='os.dist'
		['os is']='os.is'
		['os virtual']='os.virtual'
		['run']='src.run'
		['say']='ui.say'
		['self']='self'
		['self install']='self.install'
		['self name']='self.name'
		['self path']='self.path'
		['self version']='self.version'
		['src install']='src.install'
		['src use']='src.use'
		['temp inside']='temp.inside'
		['text fix']='text.fix'
		['text unfix']='text.unfix'
		['unzip']='zip.unpack'
		['url is']='url.is'
	)

	#:lib/app.sh

	.source() {
		sed 's/^\t\t//' <<'EOF'
		#:lib/shebang.sh
EOF
		echo
		echo "_SELF=$(self.path)"
		echo
		sed 's/^\t\t//' <<'EOF'
		#:lib/_.sh: .prelude+
EOF
		sed 's/^\t\t//' <<'EOF'
		#:src/_.sh
EOF
	}

	.main() {
		if ! .interactive && [[ $# -eq 0 ]]; then
			.source
		else
			app.dispatch "$@"
		fi
	}

	.main "$@"
fi
